* uCI
[[https://uci.ilyay.space/api/badge/ghlike.svg?project_id=uci&pipeline_id=deploy&job_id=build]]\\
Simple lightweight ci/cd for self-hosting

** Build
*** Cargo
Clone repo first. Then:
#+begin_src shell
  cargo install --path uci
#+end_src
and for `cli`
#+begin_src shell
  cargo install --path uci_cli
#+end_src
*** Nix
Flake with packages: =ucid=, =uci=.
#+begin_src nix
  inputs = {
    # ...

    uci.url = "github:iliayar/uci";
  }
#+end_src
and then `uci.packages.${system}.ucid`


** Usage
*** Example
Assume configs repository structure
#+begin_src 
.
├── projects.yaml
└── uci.yaml 
#+end_src
#+begin_src yaml
  # uci.yaml
  data_dir: ~/.uci
  secrets: ~/.uci-secrets.yaml
  tokens:
    - token: ${config.secrets.admin-token}
      permissions: [ 'read', 'write' ]
#+end_src
#+begin_src yaml
  # ~/.uci-secrets.yaml
  admin-token: <TOKEN>
#+end_src

Repository is located at remote's =~/uci-config=. Then daemon is running as follows
#+begin_src shell
  RUST_LOG=info ucid --config-repo ~/uci-config --prefix ''
#+end_src


With client config at host's =.uci/config.yaml=:
#+begin_src yaml
  __default__:
    runner_url: http://<HOST>
    ws_runner_url: ws://<HOST>
    token: <TOKEN>
#+end_src

- =uci config reload= - will pull repo with configs on the server and reload config

*** Example projects
- Handling update of uci in itself [[https://github.com/iliayar/uci/tree/master/.uci][Link]]
- Static generation of Html from Org [[https://github.com/iliayar/iliayar/tree/master/.uci][Link]], [[https://github.com/iliayar/ITMO/tree/master/.uci][Link]]

And corresponding =projects.yaml= for the second example:
#+begin_src yaml
  projects:
    # Other projects ...

    personal-site:
      path:
        - ${project.repos.main.path}/.uci
        - ${project.repos.conspects.path}/.uci
      repos:
        main:
          source: git@github.com:iliayar/iliayar.git
          branch: master

        conspects:
          source: git@github.com:iliayar/itmo.git
          branch: master

      tokens:
        - token: ${config.secrets.admin-token}
          permissions:
            - read
            - write
            - execute

        - token: ${config.secrets.webhook-secret}
          permissions:
            - write

        - # anonymous
          permissions:
            - read

      secrets: ~/.uci-secrets/personal-site.yaml
#+end_src


** CLI
*** Example
Trigger action manually and watch logs \\
[[https://asciinema.org/a/596894][https://asciinema.org/a/596894.svg]]
